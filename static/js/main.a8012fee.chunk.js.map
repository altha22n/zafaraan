{"version":3,"sources":["AboutPage.js","Footer.js","IssueOne.js","IssueTwo.js","IssueThree.js","IssueFour.js","About.js","Home.js","HomeP.js","App.js","serviceWorker.js","index.js"],"names":["AboutPage","className","Footer","url","React","Component","IssueOne","state","redirect","setRedirect","setState","renderRedirect","window","location","href","this","onClick","IssueTwo","IssueThree","IssueFour","About","Home","HomeP","context","router","replace","App","exact","path","component","IssueOnePage","IssueTwoPage","IssueThreePage","IssueFourPage","to","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8012fee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nconst AboutPage = () => (\r\n  <div className = \"aboutme\">\r\n    <h2> Hello, Queers! </h2>\r\n    <p>\r\n    Zafaraan is an online zine by '&' for Queer'|'Trans folks of SWANA\r\n مجلة الكترونية لمثليي(ات) ومتحولي(ات) الشرق الأوسط وشمال افريقيا\r\n </p>\r\n <p>\r\n Za&#39;faraan is a bilingual/multilingual online publication that curates a space for the creative\r\nexpression of LGBTQ folks in the MENA/SWANA (South West Asia and North Africa) region\r\nand across the spectrum of migration. The publication’s goal is to create the spaces necessary\r\nto share original creative works that will define an alternative queer and trans MENA/SWANA\r\nnarrative that considers the lesser represented language, ethnic and gender minorities in\r\nSWANA, elsewhere and everything in-between. Za’faraan is an art and literary space where\r\nissues of language justice, migration, queerness, transness, class and nationalism are\r\nunpacked and re-considered.\r\n\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default AboutPage;","// import React from 'react';\r\nimport React from 'react';\r\n\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\nclass Footer extends React.Component {\r\n\r\n// // ReactDOM.render(<SocialIcon url=\"http://twitter.com/jaketrent\" />, document.body);\r\n\r\n render() {\r\n    return (\r\n      <div  className=\"Footer\">\r\n      <SocialIcon url=\"https://www.facebook.com/Zafaraan-%D8%B2%D8%B9%D9%81%D8%B1%D8%A7%D9%86-Queer-Collective-of-SWANA-1914346938828668/\" />\r\n      <SocialIcon url=\"https://www.instagram.com/zafaraan_collective/\" />\r\n       <SocialIcon url=\"mailto:za3cme@gmail.com\" />\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nexport default Footer;","import React from 'react';\r\n// import { Document, Page } from \"react-pdf\";\r\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n// import Pdf from './file.pdf';\r\n\r\n\r\n\r\nexport default class IssueOne extends React.Component {\r\n\r\n   state = {\r\n    redirect: false\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n     window.location.href = 'https://drive.google.com/file/d/0B1EZCZ5-8Od3WlU3VmVqRXVabE0/view?usp=sharing';\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div  className=\"IssueOne\">\r\n      {this.renderRedirect()}\r\n      <button \r\n      onClick={this.setRedirect}\r\n      className=\"button\"\r\n      >\r\n\r\n      Issue One\r\n      </button>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n// import { Document, Page } from \"react-pdf\";\r\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n// import Pdf from './file.pdf';\r\n\r\n\r\n\r\nexport default class IssueTwo extends React.Component {\r\n\r\n   state = {\r\n    redirect: false\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n     window.location.href = 'https://drive.google.com/file/d/0B1EZCZ5-8Od3SVA5NXh3a0NDRHc/view?usp=sharing';\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div  className=\"IssueTwo\">\r\n      {this.renderRedirect()}\r\n      <button \r\n      onClick={this.setRedirect}\r\n      className=\"button\"\r\n      >\r\n\r\n      Issue Two\r\n      </button>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n// import { Document, Page } from \"react-pdf\";\r\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n// import Pdf from './file.pdf';\r\n\r\n\r\n\r\nexport default class IssueThree extends React.Component {\r\n\r\n   state = {\r\n    redirect: false\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n     window.location.href = 'https://drive.google.com/file/d/1hb52UD9fIuSBCvjKNdcuf0R8K7D3zKMJ/view?usp=sharing';\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div  className=\"IssueThree\">\r\n      {this.renderRedirect()}\r\n      <button \r\n      onClick={this.setRedirect}\r\n      className=\"button\"\r\n      >\r\n\r\n      Issue Three\r\n      </button>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n// import { Document, Page } from \"react-pdf\";\r\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n// import Pdf from './file.pdf';\r\n\r\n\r\n\r\nexport default class IssueFour extends React.Component {\r\n\r\n   state = {\r\n    redirect: false\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n     window.location.href = 'https://drive.google.com/file/d/1gtZgesCvX0DtrkRjev0cc2eQ9k_aMQ2n/view';\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div  className=\"IssueFour\">\r\n      {this.renderRedirect()}\r\n      <button \r\n      onClick={this.setRedirect}\r\n      className=\"button\"\r\n      >\r\n\r\n      Issue Four\r\n      </button>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n\r\n\r\nclass About extends React.Component {\r\n state = {\r\n    redirect: false\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n     window.location.href = 'https://drive.google.com/file/d/1Fn9kbqorKuP3cMlG4Q5hsYR5ANV1Nggk/view?usp=sharing';\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div  className=\"AboutMe\">\r\n      {this.renderRedirect()}\r\n      <button \r\n       onClick={this.setRedirect}\r\n       className=\"button\"\r\n      >\r\n      About\r\n      </button>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './index.css';\r\nimport IssueOne from './IssueOne';\r\nimport IssueTwo from './IssueTwo';\r\nimport IssueThree from './IssueThree';\r\nimport IssueFour from './IssueFour';\r\nimport About from './About';\r\n\r\n\r\nconst Home = () => (\r\n      <div className=\"body\">\r\n\t<div className=\"Main\">\r\n      <div className = \"Headers\">\r\n\r\n\r\n      <p />\r\n      <About />\r\n      <IssueOne />\r\n      <IssueTwo />\r\n      <IssueThree />\r\n      <IssueFour />\r\n\r\n\r\n\r\n\r\n   \r\n   </div>\r\n   </div>\r\n\r\n\r\n     \r\n      </div>\r\n  \r\n);\r\n\r\nexport default Home;","import React from 'react';\r\nimport Home from './Home';\r\n\r\n\r\nclass HomeP extends React.Component {\r\n state = {\r\n    redirect: false\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n\r\n     this.context.router.replace('/');\r\n\r\n    }\r\n\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Home />\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeP;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n// import IssueOne from './IssueOne'\r\n// import IssueTwo from './IssueTwo'\r\n// import IssueThree from './IssueThree'\r\n\r\n// import About from './About';\r\nimport AboutPage from './AboutPage';\r\nimport FooterPage from './Footer';\r\n// import Home from './Home';\r\n//import ResumePage from './ResumePage';\r\nimport IssueOnePage from './IssueOnePage';\r\nimport IssueTwoPage from './IssueTwoPage';\r\nimport IssueThreePage from './IssueThreePage';\r\nimport IssueFourPage from './IssueFourPage';\r\n\r\nimport HomeP from './HomeP';\r\nimport { BrowserRouter as Router, Route, Link, Redirect, Switch } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"Main\">\r\n      <h1>Za'faraan زعفران</h1>     \r\n      <h2> Queer Collective of SWANA (South West Asia and North Africa) </h2>\r\n      <Switch>\r\n       <Route exact path=\"/\" component={HomeP}/>\r\n       <Route path=\"/about\" component={AboutPage}/>\r\n       <Route path=\"/issueone\" component={IssueOnePage}/>\r\n        <Route path=\"/issuetwo\" component={IssueTwoPage}/>\r\n         <Route path=\"/issuethree\" component={IssueThreePage}/>\r\n         <Route path=\"/issuefour\" component={IssueFourPage}/>\r\n       <Redirect to=\"/\" />\r\n      </Switch>\r\n     \r\n\r\n       <div className =\"Footer\">\r\n      <FooterPage />\r\n      </div>\r\n       </div>\r\n   \r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import Favicon from 'react-favicon';\r\n\r\n\r\nReactDOM.render(\r\n\t<div>\r\n\t\r\n\t<BrowserRouter>\r\n\t<App \t  />\r\n\t</BrowserRouter>\r\n\t</div>\r\n\t  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}